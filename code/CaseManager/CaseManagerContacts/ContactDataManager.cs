///////////////////////////////////////////////////////////
//  ContactDataManager.cs
//  Implementation of the Class ContactDataManager
//  Generated by Enterprise Architect
//  Created on:      09-Nov-2017 16:56:41
//  Original author: Terrence Knoesen
///////////////////////////////////////////////////////////

using caseman.busmodel.contacts;
using System.Data.Odbc;
using System.Data;
using System.Diagnostics;
namespace caseman.datamodel.contacts {
	/// <summary>
	/// This class will manage the CRUD functionality in the class and any queries that
	/// need to happen across multiple Contacts.
	/// </summary>
	public class ContactDataManager {

		/// <summary>
		/// This is a class level reference to the ODBC connection to the database.
		/// </summary>
        private OdbcConnection mobjDbConnection = null;
				
        /// <summary>
        /// This is a incoming comment
        /// </summary>
        public ContactDataManager(){
            /**Terrence Knoesen 
             * Get the conneciton from the program.
            **/

		}

		/// <summary>
		/// This is just a test to see what is going on with the Comments.
		/// </summary>
        public void AddContact() {

        }


		/// <summary>
		/// This will delete the contact specified by the objContact parameter.
		/// The method will check to see if the contact is linked to a case and if so then
		/// will inform the caller that it is linked.
		/// </summary>
		/// <param name="objContact">This is the contact that will be deleted.</param>
		public void Delete(Contact objContact){

		}

		/// <summary>
		/// This will save a contact to the BackingStore.  It will check to see if the
		/// contact is already in the database and if it is (based on first and last name)
		/// it will inform you that there is already a contact in the BackingStore.
		/// </summary>
		/// <param name="objContact">This is the contact that is to be saved.</param>
		public void Save(Contact objContact){


		}

	}//end ContactDataManager

}//end namespace contacts